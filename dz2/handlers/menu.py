import logging
from enum import Enum
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from telegram.ext import ConversationHandler


from handlers.set_profile import set_profile, State
from handlers.norm import norm_water, norm_calories
from handlers.progress import check_progress
from handlers.common import back_reply_markup


class MenuKeyboard(str, Enum):
    SET_PROFILE = '/set_profile',
    NORM_WATER = '/norm_water',
    NORM_CALORIES = '/norm_calories',
    CHECK_PROGRESS = '/check_progress'


async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    button1 = InlineKeyboardButton(
        f'üôçüèª‚Äç‚ôÇÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è',
        callback_data=MenuKeyboard.SET_PROFILE.value
    )
    button2 = InlineKeyboardButton(
        f'üìà –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å',
        callback_data=MenuKeyboard.CHECK_PROGRESS.value
    )
    button3 = InlineKeyboardButton(
        f'üíß –î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –≤–æ–¥—ã',
        callback_data=MenuKeyboard.NORM_WATER.value
    )
    button4 = InlineKeyboardButton(
        f'üçΩÔ∏è –î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π',
        callback_data=MenuKeyboard.NORM_CALORIES.value
    )

    keyboard = [[button1, button2], [button3, button4]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    menu_text = f'üìã Menu\n\n'\
                f'–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'\
                f' - /set_profile - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n'\
                f' - /check_progress - –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n'\
                f' - /norm_water - –¥–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –≤–æ–¥—ã\n'\
                f' - /norm_calories - –¥–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π\n'\
                f' - /log_water <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–∏—Ç–æ–π –≤–æ–¥—ã (–≤ –º–ª)> - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤–æ–¥—ã –≤—ã–ø–∏—Ç–æ'\
                f' –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –Ω–æ—Ä–º—ã\n'\
                f' - /log_food <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞> - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å\n'\
                f' - /log_workout <—Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏> <–≤—Ä–µ–º—è (–º–∏–Ω)> - —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç —Å–æ–∂–∂—ë–Ω–Ω—ã–µ –∫–∞–ª–æ—Ä–∏–∏ –∏'\
                f' —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥ –≤–æ–¥—ã –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ\n'

    await update.message.reply_text(
        menu_text,
        reply_markup=reply_markup
    )


async def menu_button_callback(update: Update,
                               context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    button = query.data

    logging.info(f'pressed {button}')

    await query.answer()

    if button == MenuKeyboard.SET_PROFILE.value:
        await update.callback_query.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥):",
            reply_markup=back_reply_markup('–≤–µ—Å'),
        )
        context.user_data['conversation_active'] = True
        return State.WEIGHT
    elif button == MenuKeyboard.CHECK_PROGRESS.value:
        await check_progress(update, context)
    elif button == MenuKeyboard.NORM_WATER.value:
        await norm_water(update, context)
    elif button == MenuKeyboard.NORM_CALORIES.value:
        await norm_calories(update, context)
    else:
        await query.edit_message_text(
            text=f"–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É"
        )
